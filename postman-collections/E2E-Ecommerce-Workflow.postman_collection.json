{
  "info": {
    "name": "E2E E-commerce Workflow",
    "description": "Complete end-to-end workflow testing the entire e-commerce microservices system",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "customerServiceUrl",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "productServiceUrl",
      "value": "http://localhost:3002",
      "type": "string"
    },
    {
      "key": "orderServiceUrl",
      "value": "http://localhost:3004",
      "type": "string"
    },
    {
      "key": "paymentServiceUrl",
      "value": "http://localhost:3003",
      "type": "string"
    },
    {
      "key": "customerId",
      "value": "",
      "type": "string"
    },
    {
      "key": "productId",
      "value": "",
      "type": "string"
    },
    {
      "key": "orderId",
      "value": "",
      "type": "string"
    },
    {
      "key": "transactionId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. System Health Check",
      "item": [
        {
          "name": "Check All Services Health",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": ["// This will run before the request"]
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('All services are healthy', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{customerServiceUrl}}/healthz",
              "host": ["{{customerServiceUrl}}"],
              "path": ["healthz"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "2. Customer Onboarding",
      "item": [
        {
          "name": "Create New Customer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data).to.have.property('customerId');",
                  "    pm.collectionVariables.set('customerId', response.data.customerId);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Alice\",\n  \"lastName\": \"Johnson\",\n  \"email\": \"alice.johnson@example.com\",\n  \"phone\": \"+1234567890\",\n  \"address\": {\n    \"street\": \"789 Pine Street\",\n    \"city\": \"San Francisco\",\n    \"state\": \"CA\",\n    \"zipCode\": \"94102\",\n    \"country\": \"USA\"\n  }\n}"
            },
            "url": {
              "raw": "{{customerServiceUrl}}/api/v1/customers",
              "host": ["{{customerServiceUrl}}"],
              "path": ["api", "v1", "customers"]
            }
          },
          "response": []
        },
        {
          "name": "Verify Customer Creation",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{customerServiceUrl}}/api/v1/customers/{{customerId}}",
              "host": ["{{customerServiceUrl}}"],
              "path": ["api", "v1", "customers", "{{customerId}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "3. Product Discovery",
      "item": [
        {
          "name": "Browse Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{productServiceUrl}}/api/v1/products?page=1&limit=5",
              "host": ["{{productServiceUrl}}"],
              "path": ["api", "v1", "products"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Search for MacBook",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{productServiceUrl}}/api/v1/products/search?q=MacBook&page=1&limit=5",
              "host": ["{{productServiceUrl}}"],
              "path": ["api", "v1", "products", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "MacBook"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Product Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Product details retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data).to.have.property('productId');",
                  "    pm.collectionVariables.set('productId', response.data.productId);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{productServiceUrl}}/api/v1/products/prod_001",
              "host": ["{{productServiceUrl}}"],
              "path": ["api", "v1", "products", "prod_001"]
            }
          },
          "response": []
        },
        {
          "name": "Check Product Availability",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{productServiceUrl}}/api/v1/products/{{productId}}/availability?quantity=1",
              "host": ["{{productServiceUrl}}"],
              "path": [
                "api",
                "v1",
                "products",
                "{{productId}}",
                "availability"
              ],
              "query": [
                {
                  "key": "quantity",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "4. Order Creation",
      "item": [
        {
          "name": "Create Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Order created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data).to.have.property('orderId');",
                  "    pm.collectionVariables.set('orderId', response.data.orderId);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"productId\": \"{{productId}}\",\n  \"quantity\": 1\n}"
            },
            "url": {
              "raw": "{{orderServiceUrl}}/api/v1/orders",
              "host": ["{{orderServiceUrl}}"],
              "path": ["api", "v1", "orders"]
            }
          },
          "response": []
        },
        {
          "name": "Verify Order Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{orderServiceUrl}}/api/v1/orders/{{orderId}}",
              "host": ["{{orderServiceUrl}}"],
              "path": ["api", "v1", "orders", "{{orderId}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "5. Payment Processing",
      "item": [
        {
          "name": "Process Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data).to.have.property('transactionId');",
                  "    pm.collectionVariables.set('transactionId', response.data.transactionId);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"orderId\": \"{{orderId}}\",\n  \"amount\": 199900\n}"
            },
            "url": {
              "raw": "{{paymentServiceUrl}}/api/v1/payments/process",
              "host": ["{{paymentServiceUrl}}"],
              "path": ["api", "v1", "payments", "process"]
            }
          },
          "response": []
        },
        {
          "name": "Verify Payment Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{paymentServiceUrl}}/api/v1/payments/{{transactionId}}",
              "host": ["{{paymentServiceUrl}}"],
              "path": ["api", "v1", "payments", "{{transactionId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Check Payment by Order",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{paymentServiceUrl}}/api/v1/payments/order/{{orderId}}",
              "host": ["{{paymentServiceUrl}}"],
              "path": ["api", "v1", "payments", "order", "{{orderId}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "6. Order Management",
      "item": [
        {
          "name": "Update Order Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderStatus\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{orderServiceUrl}}/api/v1/orders/{{orderId}}",
              "host": ["{{orderServiceUrl}}"],
              "path": ["api", "v1", "orders", "{{orderId}}"]
            }
          },
          "response": []
        },
        {
          "name": "View Customer Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{orderServiceUrl}}/api/v1/orders/customer/{{customerId}}?page=1&limit=10",
              "host": ["{{orderServiceUrl}}"],
              "path": ["api", "v1", "orders", "customer", "{{customerId}}"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "7. Customer History",
      "item": [
        {
          "name": "View Customer Payment History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{paymentServiceUrl}}/api/v1/payments/customer/{{customerId}}?page=1&limit=10",
              "host": ["{{paymentServiceUrl}}"],
              "path": ["api", "v1", "payments", "customer", "{{customerId}}"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "8. Error Scenarios",
      "item": [
        {
          "name": "Create Order with Invalid Customer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"invalid_customer\",\n  \"productId\": \"{{productId}}\",\n  \"quantity\": 1\n}"
            },
            "url": {
              "raw": "{{orderServiceUrl}}/api/v1/orders",
              "host": ["{{orderServiceUrl}}"],
              "path": ["api", "v1", "orders"]
            }
          },
          "response": []
        },
        {
          "name": "Process Payment with Invalid Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"orderId\": \"invalid_order\",\n  \"amount\": 199900\n}"
            },
            "url": {
              "raw": "{{paymentServiceUrl}}/api/v1/payments/process",
              "host": ["{{paymentServiceUrl}}"],
              "path": ["api", "v1", "payments", "process"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "9. System Monitoring",
      "item": [
        {
          "name": "Check All Services Readiness",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{customerServiceUrl}}/readyz",
              "host": ["{{customerServiceUrl}}"],
              "path": ["readyz"]
            }
          },
          "response": []
        },
        {
          "name": "Check Message Queue Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{paymentServiceUrl}}/api/v1/payments/queue/status",
              "host": ["{{paymentServiceUrl}}"],
              "path": ["api", "v1", "payments", "queue", "status"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
